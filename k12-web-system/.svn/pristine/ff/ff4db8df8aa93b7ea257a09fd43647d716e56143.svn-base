package com.wdcloud.jyx.web.system.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.ws.rs.core.MediaType;

import org.apache.commons.lang.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.env.Environment;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.sun.jersey.api.client.Client;
import com.wdcloud.boot.core.model.ResponseModel;
import com.wdcloud.boot.core.util.AppUtil;
import com.wdcloud.jyx.web.system.SystemConstants;
import com.wdcloud.jyx.web.system.model.UserInfoModel;
import com.wdcloud.jyx.web.system.util.CommonUtils;
import com.wdcloud.login.client.session.SessionUserHolder;

/**
 * 文件名称： com.wdcloud.jyx.web.system.controller.UserInfoAction.java</br>
 * 初始作者： wangpengju</br>
 * 创建日期： 2017年8月8日</br>
 * 功能说明： 教研员信息web接口类 <br/>
 * =================================================<br/>
 * 修改记录：<br/>
 * 修改作者 日期 修改内容<br/>
 * ================================================<br/>
 * Copyright (c) 2010-2011 .All rights reserved.<br/>
 */
@RestController
@RequestMapping("/web_jyy")
public class UserInfoAction {

	@Autowired
	SessionUserHolder		sessionUserHolder;
	@Autowired
	private Environment		env;
	@Autowired
	private AppUtil			appUtil;
	private static Logger	log	= LoggerFactory.getLogger(UserInfoAction.class);

	/**
	 * 方法描述: 新增/修改教研员信息</br>
	 * 初始作者: 王鹏举 <br/>
	 * 创建日期: 2017年8月8日-下午3:56:50<br/>
	 * 开始版本: 2.0.0<br/>
	 * =================================================<br/>
	 * 修改记录：<br/>
	 * 修改作者 王鹏举 日期 修改内容<br/>
	 * ================================================<br/>
	 *
	 * @return
	 *         Object
	 */
	@RequestMapping(value = "/bcjyyxx", method = RequestMethod.POST)
	@ResponseBody
	public Object saveJyyxx(@RequestBody UserInfoModel userInfoModel, HttpServletRequest request) {

		ResponseModel responseModel = new ResponseModel();

		if (StringUtils.isNotBlank(userInfoModel.getOrgid()) && StringUtils.isNotBlank(userInfoModel.getSectioncode())
				&& StringUtils.isNotBlank(userInfoModel.getSubjectcode())
				&& StringUtils.isNotBlank(userInfoModel.getUsername())) {
			String loginid = sessionUserHolder.getLoginId(request);
			Map<String, Object> params_Map = new HashMap<String, Object>();
			Map<String, Object> params_jyy_Map = new HashMap<String, Object>();
			params_Map.put("id", userInfoModel.getOrgid());
			String jcxxserver_url = env.getProperty("wdcloud.jyx.jcxx.url");
			Map postForEntity = appUtil.postForEntity(
					jcxxserver_url + "/jcxx/selectorganizationbyid",
					params_Map, Map.class);
			if ("true".equals(postForEntity.get("isSuccess"))) {
				JSONObject jcbb = (JSONObject) postForEntity.get("rows");
				userInfoModel.setLocation(jcbb.getString("location"));
				userInfoModel.setLoginid(loginid);
				params_jyy_Map = CommonUtils.beantoMapFilterEmpty(userInfoModel);
				Map jyyEntity = appUtil.postForEntity(
						jcxxserver_url +
								"/jcxx/bcjyyxx",
						params_jyy_Map, Map.class);
				if ("true".equals(jyyEntity.get("isSuccess"))) {
					return jyyEntity;
				} else {
					responseModel.setIsSuccess("false");
					responseModel.setMsgCode("0003");
					return responseModel;
				}
			} else {
				responseModel.setIsSuccess("false");
				responseModel.setMsgCode("0002");
				return responseModel;
			}
		} else {
			responseModel.setIsSuccess("false");
			responseModel.setMsgCode("0001");
			return responseModel;
		}

	}

	/**
	 * 方法描述: 跟据用户id来得到用户详情信息</br>
	 * 初始作者: 王鹏举 <br/>
	 * 创建日期: 2017年8月8日-下午5:05:56<br/>
	 * 开始版本: 2.0.0<br/>
	 * =================================================<br/>
	 * 修改记录：<br/>
	 * 修改作者 王鹏举 日期 修改内容<br/>
	 * ================================================<br/>
	 *
	 * @param userInfoModel
	 * @param request
	 * @return
	 *         Object
	 */
	@RequestMapping(value = "/cxjyyxx", method = RequestMethod.GET)
	@ResponseBody
	public Object searchJyyXxById(UserInfoModel userInfoModel, HttpServletRequest request) {

		ResponseModel responseModel = new ResponseModel();
		if (StringUtils.isNotBlank(userInfoModel.getUserinfo_id())) {
			Map<String, Object> params_Map = new HashMap<String, Object>();
			String jcxxserver_url = env.getProperty("wdcloud.jyx.jcxx.url");
			params_Map.put("userinfo_id", userInfoModel.getUserinfo_id());
			Map responseEntity = appUtil.postForEntity(
					jcxxserver_url +
							"/jcxx/cxjyyxx",
					params_Map, Map.class);
			if ("true".equals(responseEntity.get("isSuccess"))) {
				return responseEntity;
			} else {
				responseModel.setIsSuccess("false");
				responseModel.setMsgCode("0002");
				return responseModel;
			}

		} else {
			responseModel.setIsSuccess("false");
			responseModel.setMsgCode("0001");
			return responseModel;
		}
	}

	/**
	 * 方法描述: 分页查询教研员信息列表</br>
	 * 初始作者: 王鹏举 <br/>
	 * 创建日期: 2017年8月8日-下午5:23:11<br/>
	 * 开始版本: 2.0.0<br/>
	 * =================================================<br/>
	 * 修改记录：<br/>
	 * 修改作者 王鹏举 日期 修改内容<br/>
	 * ================================================<br/>
	 *
	 * @param userInfoModel
	 * @param request
	 * @return
	 *         Object
	 */
	@RequestMapping(value = "/cxjyyxxlb", method = RequestMethod.GET)
	@ResponseBody
	public Object searchJyyxxlb(UserInfoModel userInfoModel, HttpServletRequest request) {

		ResponseModel responseModel = new ResponseModel();
		if (userInfoModel.getRows() != null && userInfoModel.getPage() != null) {
			Map<String, Object> params_Map = new HashMap<String, Object>();
			String jcxxserver_url = env.getProperty("wdcloud.jyx.jcxx.url");
			params_Map.put("rows", userInfoModel.getRows());
			params_Map.put("page", userInfoModel.getPage());
			params_Map.put("username", userInfoModel.getUsername() != null ? userInfoModel.getUsername() : "");
			params_Map.put("lrsj_start", userInfoModel.getLrsj_start() != null ? userInfoModel.getLrsj_start() : "");
			params_Map.put("lrsj_end", userInfoModel.getLrsj_end() != null ? userInfoModel.getLrsj_end() : "");
			params_Map.put("sfcjzh", userInfoModel.getSfcjzh() != null ? userInfoModel.getSfcjzh() : "");
			params_Map.put("orgid", userInfoModel.getOrgid() != null ? userInfoModel.getOrgid() : "");
			Map responseEntity = appUtil.postForEntity(
					jcxxserver_url +
							"/jcxx/cxjyyxxlb",
					params_Map, Map.class);
			if ("true".equals(responseEntity.get("isSuccess"))) {
				return responseEntity;
			} else {
				responseModel.setIsSuccess("false");
				responseModel.setMsgCode("0002");
				return responseModel;
			}

		} else {
			responseModel.setIsSuccess("false");
			responseModel.setMsgCode("0001");
			return responseModel;
		}

	}

	/**
	 * 方法描述: 创建账号</br>
	 * 初始作者: 王鹏举 <br/>
	 * 创建日期: 2017年8月8日-下午5:57:22<br/>
	 * 开始版本: 2.0.0<br/>
	 * =================================================<br/>
	 * 修改记录：<br/>
	 * 修改作者 王鹏举 日期 修改内容<br/>
	 * ================================================<br/>
	 *
	 * @param userInfoModel
	 * @param request
	 * @return
	 *         Object
	 */
	@RequestMapping(value = "/cjzh", method = RequestMethod.POST)
	@ResponseBody
	public Object createAccount(@RequestBody UserInfoModel userInfoModel, HttpServletRequest request) {

		ResponseModel responseModel = new ResponseModel();
		if (StringUtils.isNotBlank(userInfoModel.getPassword())) {
			Map<String, Object> params_Map = new HashMap<String, Object>();
			String jcxxserver_url = env.getProperty("wdcloud.jyx.jcxx.url");
			List<Map<String, String>> yxjyy = JSON.parseObject(userInfoModel.getYxjyy(), List.class);

			params_Map.put("yxjyy", yxjyy);
			params_Map.put("password", userInfoModel.getPassword());
			Map responseEntity = appUtil.postForEntity(
					jcxxserver_url +
							"/jcxx/cjzh",
					params_Map, Map.class);
			if ("true".equals(responseEntity.get("isSuccess"))) {
				return responseEntity;
			} else {
				responseModel.setIsSuccess("false");
				responseModel.setMsgCode("0002");
				return responseModel;
			}
		} else {
			responseModel.setIsSuccess("false");
			responseModel.setMsgCode("0001");
			return responseModel;
		}

	}

	/**
	 * 方法描述:查询组织机构树</br>
	 * 初始作者: 王鹏举 <br/>
	 * 创建日期: 2017年8月8日-下午6:20:25<br/>
	 * 开始版本: 2.0.0<br/>
	 * =================================================<br/>
	 * 修改记录：<br/>
	 * 修改作者 王鹏举 日期 修改内容<br/>
	 * ================================================<br/>
	 *
	 * @param userInfoModel
	 * @param request
	 * @return
	 *         Object
	 */
	@RequestMapping(value = "/cxzzjgs", method = RequestMethod.POST)
	@ResponseBody
	public Object selectOrgTree(String pid, HttpServletRequest request) {

		ResponseModel responseModel = new ResponseModel();

		String loginId = sessionUserHolder.getLoginId(request);
		// String loginId = "1000002000";

		Map<String, Object> params_Map = new HashMap<String, Object>();
		String jcxxserver_url = env.getProperty("wdcloud.jyx.jcxx.url");
		params_Map.put("orgid", pid);
		params_Map.put("loginId", loginId);
		Map responseEntity = appUtil.postForEntity(
				jcxxserver_url +
				"/jcxx/cxzzjgs",
				params_Map, Map.class);
		if ("true".equals(responseEntity.get("isSuccess"))) {
			return responseEntity;
		} else {
			responseModel.setIsSuccess("false");
			responseModel.setMsgCode("0002");
			return responseModel;
		}

	}

	/**
	 * 方法描述: 删除教研员</br>
	 * 初始作者: 王鹏举 <br/>
	 * 创建日期: 2017年8月8日-下午7:06:35<br/>
	 * 开始版本: 2.0.0<br/>
	 * =================================================<br/>
	 * 修改记录：<br/>
	 * 修改作者 王鹏举 日期 修改内容<br/>
	 * ================================================<br/>
	 *
	 * @return
	 *         Object
	 */
	@RequestMapping(value = "/scjyy", method = RequestMethod.POST)
	@ResponseBody
	public Object deleteJyy(@RequestBody UserInfoModel userInfoModel, HttpServletRequest request) {

		ResponseModel responseModel = new ResponseModel();
		String loginid = sessionUserHolder.getLoginId(request);
		if (StringUtils.isNotBlank(userInfoModel.getUserinfo_id())) {
			Map<String, Object> params_Map = new HashMap<String, Object>();
			String jcxxserver_url = env.getProperty("wdcloud.jyx.jcxx.url");
			params_Map.put("loginid", loginid);
			params_Map.put("userinfo_id", userInfoModel.getUserinfo_id());
			Map responseEntity = appUtil.postForEntity(
					jcxxserver_url +
							"/jcxx/scjyy",
					params_Map, Map.class);
			if ("true".equals(responseEntity.get("isSuccess"))) {
				return responseEntity;
			} else {
				responseModel.setIsSuccess("false");
				responseModel.setMsgCode("0002");
				return responseModel;
			}
		} else {
			responseModel.setIsSuccess("false");
			responseModel.setMsgCode("0001");
			return responseModel;
		}

	}

	/**
	 * 方法描述: 重置密码</br>
	 * 初始作者: 王鹏举 <br/>
	 * 创建日期: 2017年8月9日-上午10:01:00<br/>
	 * 开始版本: 2.0.0<br/>
	 * =================================================<br/>
	 * 修改记录：<br/>
	 * 修改作者 王鹏举 日期 修改内容<br/>
	 * ================================================<br/>
	 *
	 * @param userInfoModel
	 * @param request
	 * @return
	 *         Object
	 */
	@RequestMapping(value = "/czmm", method = RequestMethod.POST)
	@ResponseBody
	public Object resetPassword(@RequestBody UserInfoModel userInfoModel, HttpServletRequest request) {

		ResponseModel responseModel = new ResponseModel();
		if (StringUtils.isNotBlank(userInfoModel.getAccount())
				&& StringUtils.isNotBlank(userInfoModel.getNew_password())) {
			String account = userInfoModel.getAccount();
			String accountArr[] = account.split(",");
			Client client = Client.create();
			String serverUrl = env.getProperty("com.wdcloud.jyx.uic.server.url");
			boolean boo = true;
			for (String element : accountArr) {
				Map<String, Object> rcMap = new HashMap<String, Object>();
				Map<String, Object> rs = new HashMap<String, Object>();
				rcMap.put("loginid", element);
				rcMap.put("newpassword", userInfoModel.getNew_password());
				rcMap.put("passwordstrengthcheck", SystemConstants.SYSTEM_SFDM_0);

				rs = client.resource(serverUrl + "/rest/v1/users/password/updateByLoginID")
						.type(MediaType.APPLICATION_JSON)
						.post(Map.class, rcMap);
				if (!"1".equals(rs.get("result"))) {
					boo = false;
				}
			}
			if (boo) {
				responseModel.setIsSuccess("true");
				responseModel.setMsgCode("");
				return responseModel;
			} else {
				responseModel.setIsSuccess("false");
				responseModel.setMsgCode("0002");
				return responseModel;
			}
		} else {
			responseModel.setIsSuccess("false");
			responseModel.setMsgCode("0001");
			return responseModel;
		}

	}

	/**
	 * 方法描述: 根据学段查学科</br>
	 * 初始作者: 王鹏举 <br/>
	 * 创建日期: 2017年8月10日-上午11:11:54<br/>
	 * 开始版本: 2.0.0<br/>
	 * =================================================<br/>
	 * 修改记录：<br/>
	 * 修改作者 王鹏举 日期 修改内容<br/>
	 * ================================================<br/>
	 *
	 * @param fycxJbModel
	 * @param request
	 * @return
	 *         Object
	 */
	@RequestMapping(value = "/gjxdhdxk", method = RequestMethod.GET)
	@ResponseBody
	public Object searchXkByXd(UserInfoModel userInfoModel, HttpServletRequest request) {

		ResponseModel responseModel = new ResponseModel();
		if (StringUtils.isNotBlank(userInfoModel.getXd())) {

			Map<String, Object> params_Map = new HashMap<String, Object>();

			params_Map.put("xd", userInfoModel.getXd());
			String jcxxserver_url = env.getProperty("wdcloud.jyx.jcxx.url");
			Map postForEntity = appUtil.postForEntity(
					jcxxserver_url +
					"/jcxx/cxkcbxd",
					params_Map, Map.class);
			if ("true".equals(postForEntity.get("isSuccess"))) {
				return postForEntity;
			} else {
				responseModel.setIsSuccess("false");
				responseModel.setMsgCode("0002");
				return responseModel;
			}
		} else {
			responseModel.setIsSuccess("false");
			responseModel.setMsgCode("0001");
			return responseModel;
		}
	}

}
