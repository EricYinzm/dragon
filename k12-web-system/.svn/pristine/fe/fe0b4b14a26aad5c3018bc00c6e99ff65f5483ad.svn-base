package com.wdcloud.ueditor.fastdfs.web.controller;

import java.io.IOException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.wdcloud.ueditor.extend.ueditor.UeditorActionEnter;
import com.wdcloud.ueditor.extend.ueditor.UeditorService;

/**
 * 文件名： com.wdcloud.ueditor.fastdfs.web.controller.UeditorController.java
 * 作者： 咖啡豆
 * 日期： 2016年1月12日
 * 功能说明：ueditor后台处理
 * =========================================================
 * 修改记录：
 * 修改作者 日期 修改内容
 * =========================================================
 * Copyright (c) 2010-2011 .All rights reserved.
 */
@Scope("prototype")
@Controller
@RequestMapping("/C002")
public class UeditorController {

	protected Logger		logger	= LoggerFactory.getLogger(getClass());

	@Autowired
	private UeditorService	ueditoreService;

	@Value("${wdcloud.boot.file.upload.path}")
	private String			file_upload;
	@Value("${wdcloud.boot.ueditor.config.json}")
	private String			ueditor_config_json;

	@RequestMapping(value = "/execute")
	@ResponseBody
	public void executeFastDFS(HttpServletRequest request, HttpServletResponse response, Model model)
			throws IOException {

		String rootPath0 = request.getServletContext().getRealPath("/");
		String rootPath1 = request.getRealPath("/");
		String rootPath = this.getClass().getClassLoader().getResource("").getPath();
		// String rootPath = request.getSession().getServletContext().getRealPath("/");
		String resultMsg = new UeditorActionEnter(request, rootPath, ueditor_config_json, ueditoreService).exec();

		// logger.error("ueditor execute ... resultMsg:" + UnicodeUtil.fromUnicode(resultMsg));

		response.getWriter().write(resultMsg);
	}
}
